stages:
  - setup
  - format
  - build
  - test
  - report
  - cleanup

variables:
  TEST_REPORT_DIR: test_results
  UNIT_TEST_REPORT: ${TEST_REPORT_DIR}/unit_test_result_report.xml
  INTEGRATION_TEST_REPORT: ${TEST_REPORT_DIR}/integration_test_result_report.xml
  TEST_OUTPUT: ${TEST_REPORT_DIR}/test_output.txt
  VENV_DIR: venv

setup:
  stage: setup
  image: golang:1.19
  before_script:
    - apt-get update
    - apt-get install -y python3 python3-pip python3-venv
    - python3 -m venv ${VENV_DIR}
    - . ${VENV_DIR}/bin/activate
    - pip install -r project_utils/requirements.txt
  script:
    - go mod tidy
    - go mod vendor
    - mkdir -p ${TEST_REPORT_DIR}
  artifacts:
    paths:
      - vendor/
      - ${TEST_REPORT_DIR}/
      - ${VENV_DIR}/

format:
  stage: format
  image: golang:1.19
  script:
    - make fmt
  artifacts:
    paths:
      - .

build:
  stage: build
  image: golang:1.19
  script:
    # Build both node and bootstrap_node
    - make build_node
    - make build_bootstrap_node
  artifacts:
    paths:
      - cmd/node/dht-node
      - cmd/bootstrap_node/bootstrap-node

unit_test:
  stage: test
  image: golang:1.19
  before_script:
    - go install github.com/jstemmer/go-junit-report@latest
    - . ${VENV_DIR}/bin/activate
  script:
    - go test -v ./tests/unit_tests/... | go-junit-report > ${UNIT_TEST_REPORT}
  artifacts:
    paths:
      - ${TEST_REPORT_DIR}/
    reports:
      junit: ${UNIT_TEST_REPORT}

integration_test:
  stage: test
  image: golang:1.19
  before_script:
    - go install github.com/jstemmer/go-junit-report@latest
    - . ${VENV_DIR}/bin/activate
  script:
    - go test -v ./tests/integration_tests/... | go-junit-report > ${INTEGRATION_TEST_REPORT}
  artifacts:
    paths:
      - ${TEST_REPORT_DIR}/
    reports:
      junit: ${INTEGRATION_TEST_REPORT}

report:
  stage: report
  image: python:3.9
  before_script:
    - apt-get update && apt-get install -y xsltproc
    - . ${VENV_DIR}/bin/activate
  script:
    - xsltproc ./project_utils/junit-xml-to-html.xsl ${UNIT_TEST_REPORT} > ${TEST_REPORT_DIR}/unit_test_result_report.html
    - xsltproc ./project_utils/junit-xml-to-html.xsl ${INTEGRATION_TEST_REPORT} > ${TEST_REPORT_DIR}/integration_test_result_report.html
  artifacts:
    paths:
      - ${TEST_REPORT_DIR}/unit_test_result_report.html
      - ${TEST_REPORT_DIR}/integration_test_result_report.html

cleanup:
  stage: cleanup
  image: alpine
  before_script:
    - apk add --no-cache make
  script:
    - make clean
  artifacts:
    expire_in: 1 week
    paths:
      - tests/
